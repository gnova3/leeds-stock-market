{"ast":null,"code":"var _jsxFileName = \"/Users/gnova/Downloads/project/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport stocksData from './mock/stocks';\nimport newsData from './mock/news';\nimport StockTicker from './components/StockTicker';\nimport NewsTicker from './components/NewsTicker';\nimport StockCard from './components/StockCard';\nimport PortfolioTable from './components/PortfolioTable';\nconst App = () => {\n  const [stocks, setStocks] = useState(stocksData);\n  const [portfolio, setPortfolio] = useState([]);\n  const [balance, setBalance] = useState(10000);\n  const [currentPrices, setCurrentPrices] = useState({});\n  useEffect(() => {\n    // Initialize current prices\n    const initialPrices = {};\n    stocks.forEach(stock => {\n      initialPrices[stock.id] = stock.price;\n    });\n    setCurrentPrices(initialPrices);\n\n    // Update stock prices every 3 seconds\n    const interval = setInterval(() => {\n      setStocks(prevStocks => {\n        return prevStocks.map(stock => {\n          const change = Math.random() * 4 - 2; // Random change between -2% to +2%\n          const newPrice = stock.price * (1 + change / 100);\n          const newChange = (newPrice - stock.history[0]) / stock.history[0] * 100;\n          return {\n            ...stock,\n            price: parseFloat(newPrice.toFixed(2)),\n            change: parseFloat(newChange.toFixed(2)),\n            history: [...stock.history, newPrice].slice(-10)\n          };\n        });\n      });\n\n      // Update current prices for portfolio calculation\n      setCurrentPrices(prevPrices => {\n        const newPrices = {\n          ...prevPrices\n        };\n        stocks.forEach(stock => {\n          const change = Math.random() * 4 - 2;\n          newPrices[stock.id] = parseFloat((stock.price * (1 + change / 100)).toFixed(2));\n        });\n        return newPrices;\n      });\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleBuy = (stockId, quantity) => {\n    const stock = stocks.find(s => s.id === stockId);\n    const totalCost = stock.price * quantity;\n    if (balance >= totalCost) {\n      setBalance(prev => prev - totalCost);\n      setPortfolio(prevPortfolio => {\n        const existingItem = prevPortfolio.find(item => item.stockId === stockId);\n        if (existingItem) {\n          const newQuantity = existingItem.quantity + quantity;\n          const newAvgPrice = (existingItem.quantity * existingItem.avgPrice + totalCost) / newQuantity;\n          return prevPortfolio.map(item => item.stockId === stockId ? {\n            ...item,\n            quantity: newQuantity,\n            avgPrice: newAvgPrice\n          } : item);\n        } else {\n          return [...prevPortfolio, {\n            stockId,\n            stockName: stock.name,\n            quantity,\n            avgPrice: stock.price\n          }];\n        }\n      });\n    } else {\n      alert(\"Insufficient funds!\");\n    }\n  };\n  const handleSell = (stockId, quantity) => {\n    const portfolioItem = portfolio.find(item => item.stockId === stockId);\n    if (!portfolioItem || portfolioItem.quantity < quantity) {\n      alert(\"Not enough shares to sell!\");\n      return;\n    }\n    const stock = stocks.find(s => s.id === stockId);\n    const totalValue = stock.price * quantity;\n    setBalance(prev => prev + totalValue);\n    setPortfolio(prevPortfolio => {\n      if (portfolioItem.quantity === quantity) {\n        return prevPortfolio.filter(item => item.stockId !== stockId);\n      } else {\n        return prevPortfolio.map(item => item.stockId === stockId ? {\n          ...item,\n          quantity: item.quantity - quantity\n        } : item);\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"bg-blue-800 text-white p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl font-bold text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Leeds Stock Market\")), /*#__PURE__*/React.createElement(NewsTicker, {\n    news: newsData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mx-auto p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StockTicker, {\n    stocks: stocks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-3 gap-6 mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"md:col-span-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-xl font-semibold mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Available Stocks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, stocks.map(stock => /*#__PURE__*/React.createElement(StockCard, {\n    key: stock.id,\n    stock: stock,\n    onBuy: handleBuy,\n    onSell: handleSell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white rounded-lg shadow p-4 mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-xl font-semibold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"Account Summary\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Balance: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 47\n    }\n  }, \"$\", balance.toFixed(2)))), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-xl font-semibold mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Your Portfolio\"), portfolio.length > 0 ? /*#__PURE__*/React.createElement(PortfolioTable, {\n    portfolio: portfolio,\n    currentPrices: currentPrices,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, \"Your portfolio is empty. Buy some stocks!\")))));\n};\nexport default App;\n\n// DONE","map":{"version":3,"names":["React","useState","useEffect","stocksData","newsData","StockTicker","NewsTicker","StockCard","PortfolioTable","App","stocks","setStocks","portfolio","setPortfolio","balance","setBalance","currentPrices","setCurrentPrices","initialPrices","forEach","stock","id","price","interval","setInterval","prevStocks","map","change","Math","random","newPrice","newChange","history","parseFloat","toFixed","slice","prevPrices","newPrices","clearInterval","handleBuy","stockId","quantity","find","s","totalCost","prev","prevPortfolio","existingItem","item","newQuantity","newAvgPrice","avgPrice","stockName","name","alert","handleSell","portfolioItem","totalValue","filter","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","news","key","onBuy","onSell","length"],"sources":["/Users/gnova/Downloads/project/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport stocksData from './mock/stocks';\nimport newsData from './mock/news';\nimport StockTicker from './components/StockTicker';\nimport NewsTicker from './components/NewsTicker';\nimport StockCard from './components/StockCard';\nimport PortfolioTable from './components/PortfolioTable';\n\nconst App = () => {\n  const [stocks, setStocks] = useState(stocksData);\n  const [portfolio, setPortfolio] = useState([]);\n  const [balance, setBalance] = useState(10000);\n  const [currentPrices, setCurrentPrices] = useState({});\n\n  useEffect(() => {\n    // Initialize current prices\n    const initialPrices = {};\n    stocks.forEach(stock => {\n      initialPrices[stock.id] = stock.price;\n    });\n    setCurrentPrices(initialPrices);\n\n    // Update stock prices every 3 seconds\n    const interval = setInterval(() => {\n      setStocks(prevStocks => {\n        return prevStocks.map(stock => {\n          const change = (Math.random() * 4 - 2); // Random change between -2% to +2%\n          const newPrice = stock.price * (1 + change / 100);\n          const newChange = ((newPrice - stock.history[0]) / stock.history[0]) * 100;\n          \n          return {\n            ...stock,\n            price: parseFloat(newPrice.toFixed(2)),\n            change: parseFloat(newChange.toFixed(2)),\n            history: [...stock.history, newPrice].slice(-10)\n          };\n        });\n      });\n\n      // Update current prices for portfolio calculation\n      setCurrentPrices(prevPrices => {\n        const newPrices = {...prevPrices};\n        stocks.forEach(stock => {\n          const change = (Math.random() * 4 - 2);\n          newPrices[stock.id] = parseFloat((stock.price * (1 + change / 100)).toFixed(2));\n        });\n        return newPrices;\n      });\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleBuy = (stockId, quantity) => {\n    const stock = stocks.find(s => s.id === stockId);\n    const totalCost = stock.price * quantity;\n\n    if (balance >= totalCost) {\n      setBalance(prev => prev - totalCost);\n      \n      setPortfolio(prevPortfolio => {\n        const existingItem = prevPortfolio.find(item => item.stockId === stockId);\n        if (existingItem) {\n          const newQuantity = existingItem.quantity + quantity;\n          const newAvgPrice = ((existingItem.quantity * existingItem.avgPrice) + totalCost) / newQuantity;\n          return prevPortfolio.map(item => \n            item.stockId === stockId \n              ? { ...item, quantity: newQuantity, avgPrice: newAvgPrice }\n              : item\n          );\n        } else {\n          return [...prevPortfolio, {\n            stockId,\n            stockName: stock.name,\n            quantity,\n            avgPrice: stock.price\n          }];\n        }\n      });\n    } else {\n      alert(\"Insufficient funds!\");\n    }\n  };\n\n  const handleSell = (stockId, quantity) => {\n    const portfolioItem = portfolio.find(item => item.stockId === stockId);\n    if (!portfolioItem || portfolioItem.quantity < quantity) {\n      alert(\"Not enough shares to sell!\");\n      return;\n    }\n\n    const stock = stocks.find(s => s.id === stockId);\n    const totalValue = stock.price * quantity;\n    setBalance(prev => prev + totalValue);\n\n    setPortfolio(prevPortfolio => {\n      if (portfolioItem.quantity === quantity) {\n        return prevPortfolio.filter(item => item.stockId !== stockId);\n      } else {\n        return prevPortfolio.map(item => \n          item.stockId === stockId \n            ? { ...item, quantity: item.quantity - quantity }\n            : item\n        );\n      }\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <header className=\"bg-blue-800 text-white p-4\">\n        <h1 className=\"text-2xl font-bold text-center\">Leeds Stock Market</h1>\n      </header>\n\n      <NewsTicker news={newsData} />\n\n      <div className=\"container mx-auto p-4\">\n        <StockTicker stocks={stocks} />\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-6\">\n          <div className=\"md:col-span-2\">\n            <h2 className=\"text-xl font-semibold mb-4\">Available Stocks</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {stocks.map(stock => (\n                <StockCard\n                  key={stock.id}\n                  stock={stock}\n                  onBuy={handleBuy}\n                  onSell={handleSell}\n                />\n              ))}\n            </div>\n          </div>\n\n          <div>\n            <div className=\"bg-white rounded-lg shadow p-4 mb-6\">\n              <h2 className=\"text-xl font-semibold mb-2\">Account Summary</h2>\n              <p className=\"text-lg\">Balance: <span className=\"font-bold\">${balance.toFixed(2)}</span></p>\n            </div>\n\n            <h2 className=\"text-xl font-semibold mb-4\">Your Portfolio</h2>\n            {portfolio.length > 0 ? (\n              <PortfolioTable portfolio={portfolio} currentPrices={currentPrices} />\n            ) : (\n              <p className=\"text-gray-500\">Your portfolio is empty. Buy some stocks!</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n// DONE"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}